// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1051:Do not declare visible instance fields", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Core.Persistences.MongoConnection.ConnectionString")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1051:Do not declare visible instance fields", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Core.Persistences.MongoConnection.DatabaseName")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1051:Do not declare visible instance fields", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Core.Persistences.MongoGenericRepository`1.Connection")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1823:Unused field 'numberOfRequests'.", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Core.Services.ServiceContext.numberOfRequests")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'long.Parse(string)' could vary based on the current user's locale settings. Replace this call in 'ArrayConverter.ReadJson(JsonReader, Type, object, JsonSerializer)' with a call to 'long.Parse(string, IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Common.ArrayConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)~System.Object")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1031:Modify 'ReadJson' to catch a more specific allowed exception type, or rethrow the exception.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Common.ArrayConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)~System.Object")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'DateTimeOffset.ToString(string)' could vary based on the current user's locale settings. Replace this call in 'BsonConverter.ReadJson(JsonReader, Type, object, JsonSerializer)' with a call to 'DateTimeOffset.ToString(string, IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Common.BsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)~System.Object")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1031:Modify 'ReadJson' to catch a more specific allowed exception type, or rethrow the exception.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Common.BsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)~System.Object")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Configurations.ThroughHttpConfigurationServiceProvider.GetConfiguration(System.String,System.String)~System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{System.String,System.String}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2234:Modify 'ThroughHttpConfigurationServiceProvider.GetConfiguration(string, string)' to call 'HttpClient.GetAsync(Uri)' instead of 'HttpClient.GetAsync(string)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Configurations.ThroughHttpConfigurationServiceProvider.GetConfiguration(System.String,System.String)~System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{System.String,System.String}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1822:Member Join does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Configurations.ThroughHttpConfigurationServiceProvider.Join(System.String,System.String)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'int.ToString()' could vary based on the current user's locale settings. Replace this call in 'ThroughHttpConfigurationServiceProvider.RecursiveFlatten(Dictionary<string, string>, JToken, string)' with a call to 'int.ToString(IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Configurations.ThroughHttpConfigurationServiceProvider.RecursiveFlatten(System.Collections.Generic.Dictionary{System.String,System.String},Newtonsoft.Json.Linq.JToken,System.String)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'IConfigurationBuilder CoreExtensions.AddConfigurationService(IConfigurationBuilder builder)', validate parameter 'builder' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.CoreExtensions.AddConfigurationService(Microsoft.Extensions.Configuration.IConfigurationBuilder)~Microsoft.Extensions.Configuration.IConfigurationBuilder")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1303:Method 'IConfigurationBuilder CoreExtensions.AddConfigurationService(IConfigurationBuilder builder)' passes a literal string as parameter 'message' of a call to 'Exception.Exception(string message)'. Retrieve the following string(s) from a resource table instead: \"Missing ConfiguartionServiceOptions or ServiceOptions in appsettings.json, please check again!\".", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.CoreExtensions.AddConfigurationService(Microsoft.Extensions.Configuration.IConfigurationBuilder)~Microsoft.Extensions.Configuration.IConfigurationBuilder")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Contains(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Core.CoreExtensions.UseLetPortal(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Hosting.IApplicationLifetime, System.Action<LetPortal.Core.LetPortalMiddlewareOptions>)' with a call to 'string.Contains(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.CoreExtensions.UseLetPortal(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IApplicationLifetime,System.Action{LetPortal.Core.LetPortalMiddlewareOptions})")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Exceptions.CatchGlobalExceptionMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext,LetPortal.Core.Logger.IServiceLogger{LetPortal.Core.Exceptions.CatchGlobalExceptionMiddleware})~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1303:Method 'Task CatchGlobalExceptionMiddleware.Invoke(HttpContext httpContext, IServiceLogger<CatchGlobalExceptionMiddleware> serviceLogger)' passes a literal string as parameter 'message' of a call to 'void IServiceLogger<CatchGlobalExceptionMiddleware>.Critical(Exception exception, string message, params object[] logObjects)'. Retrieve the following string(s) from a resource table instead: \"Internal server error {$error}\".", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Exceptions.CatchGlobalExceptionMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext,LetPortal.Core.Logger.IServiceLogger{LetPortal.Core.Exceptions.CatchGlobalExceptionMiddleware})~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1031:Modify 'Invoke' to catch a more specific allowed exception type, or rethrow the exception.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Exceptions.CatchGlobalExceptionMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext,LetPortal.Core.Logger.IServiceLogger{LetPortal.Core.Exceptions.CatchGlobalExceptionMiddleware})~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'void ArrayExtensions.ForEach(Array array, Action<Array, int[]> action)', validate parameter 'array' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Extensions.ArrayExtensions.ForEach(System.Array,System.Action{System.Array,System.Int32[]})")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2208:Method ToEnum passes 'Enum value can't be null' as the paramName argument to a ArgumentNullException constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Extensions.EnumExtensions.ToEnum``1(System.String,System.Boolean)~``0")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'BsonType ObjectExtensions.GetBsonType(JToken jtoken)', validate parameter 'jtoken' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Extensions.ObjectExtensions.GetBsonType(Newtonsoft.Json.Linq.JToken)~MongoDB.Bson.BsonType")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'object ObjectExtensions.GetValue(JToken jToken)', validate parameter 'jToken' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Extensions.ObjectExtensions.GetValue(Newtonsoft.Json.Linq.JToken)~System.Object")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'bool ObjectExtensions.IsPrimitive(Type type)', validate parameter 'type' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Extensions.ObjectExtensions.IsPrimitive(System.Type)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1720:Identifier 'obj' contains type name", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Extensions.ObjectExtensions.ToJson(System.Object)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'string HttpExtensions.GetClientIpAddress(IHttpContextAccessor httpContextAccessor)', validate parameter 'httpContextAccessor' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Https.HttpExtensions.GetClientIpAddress(Microsoft.AspNetCore.Http.IHttpContextAccessor)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<string> HttpExtensions.GetRawBodyAsync(HttpRequest httpRequest)', validate parameter 'httpRequest' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Https.HttpExtensions.GetRawBodyAsync(Microsoft.AspNetCore.Http.HttpRequest)~System.Threading.Tasks.Task{System.String}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Https.HttpExtensions.GetRawBodyAsync(Microsoft.AspNetCore.Http.HttpRequest)~System.Threading.Tasks.Task{System.String}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1031:Modify 'GetRawBodyAsync' to catch a more specific allowed exception type, or rethrow the exception.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Https.HttpExtensions.GetRawBodyAsync(Microsoft.AspNetCore.Http.HttpRequest)~System.Threading.Tasks.Task{System.String}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<string> HttpExtensions.GetRawBodyAsync(HttpResponse httpResponse)', validate parameter 'httpResponse' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Https.HttpExtensions.GetRawBodyAsync(Microsoft.AspNetCore.Http.HttpResponse)~System.Threading.Tasks.Task{System.String}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Https.HttpExtensions.GetRawBodyAsync(Microsoft.AspNetCore.Http.HttpResponse)~System.Threading.Tasks.Task{System.String}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1031:Modify 'GetRawBodyAsync' to catch a more specific allowed exception type, or rethrow the exception.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Https.HttpExtensions.GetRawBodyAsync(Microsoft.AspNetCore.Http.HttpResponse)~System.Threading.Tasks.Task{System.String}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task CheckTraceIdMiddleware.Invoke(HttpContext httpContext)', validate parameter 'httpContext' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Logger.CheckTraceIdMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1303:Method 'Task CheckTraceIdMiddleware.Invoke(HttpContext httpContext)' passes a literal string as parameter 'text' of a call to 'Task HttpResponseWritingExtensions.WriteAsync(HttpResponse response, string text, CancellationToken cancellationToken = default(CancellationToken))'. Retrieve the following string(s) from a resource table instead: \"Missing some important headers\".", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Logger.CheckTraceIdMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Logger.CheckTraceIdMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Logger.CheckUserSessionIdMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1303:Method 'Task CheckUserSessionIdMiddleware.Invoke(HttpContext httpContext)' passes a literal string as parameter 'text' of a call to 'Task HttpResponseWritingExtensions.WriteAsync(HttpResponse response, string text, CancellationToken cancellationToken = default(CancellationToken))'. Retrieve the following string(s) from a resource table instead: \"Missing some important headers\".", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Logger.CheckUserSessionIdMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task CheckUserSessionIdMiddleware.Invoke(HttpContext httpContext)', validate parameter 'httpContext' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Logger.CheckUserSessionIdMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task GenerateTraceIdMiddleware.Invoke(HttpContext httpContext)', validate parameter 'httpContext' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Logger.GenerateTraceIdMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Logger.GenerateTraceIdMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1716:Rename virtual/interface member IServiceLogger<T>.Error(Exception, string, params object[]) so that it no longer conflicts with the reserved language keyword 'Error'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Logger.IServiceLogger`1.Error(System.Exception,System.String,System.Object[])")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1716:Rename virtual/interface member IServiceLogger<T>.Error(string, params object[]) so that it no longer conflicts with the reserved language keyword 'Error'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Logger.IServiceLogger`1.Error(System.String,System.Object[])")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'ServiceLogger<T>.ServiceLogger(ILogger logger, IHttpContextAccessor httpContextAccessor)', validate parameter 'logger' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Logger.ServiceLogger`1.#ctor(Serilog.ILogger,Microsoft.AspNetCore.Http.IHttpContextAccessor)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'void ServiceLogger<T>.Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory)', validate parameter 'logEvent' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Logger.ServiceLogger`1.Enrich(Serilog.Events.LogEvent,Serilog.Core.ILogEventPropertyFactory)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1303:Method 'Task AddRequestMonitorMiddleware.Invoke(HttpContext httpContext, IOptionsMonitor<MonitorOptions> monitorOption, IMonitorHealthCheck monitorHealthCheck, IServiceLogger<AddRequestMonitorMiddleware> serviceLogger)' passes a literal string as parameter 'message' of a call to 'void IServiceLogger<AddRequestMonitorMiddleware>.Info(string message, params object[] logObjects)'. Retrieve the following string(s) from a resource table instead: \"Request complete with these usages {$Monitor}\".", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Monitors.AddRequestMonitorMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext,Microsoft.Extensions.Options.IOptionsMonitor{LetPortal.Core.Monitors.MonitorOptions},LetPortal.Core.Monitors.IMonitorHealthCheck,LetPortal.Core.Logger.IServiceLogger{LetPortal.Core.Monitors.AddRequestMonitorMiddleware})~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Monitors.AddRequestMonitorMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext,Microsoft.Extensions.Options.IOptionsMonitor{LetPortal.Core.Monitors.MonitorOptions},LetPortal.Core.Monitors.IMonitorHealthCheck,LetPortal.Core.Logger.IServiceLogger{LetPortal.Core.Monitors.AddRequestMonitorMiddleware})~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task AddRequestMonitorMiddleware.Invoke(HttpContext httpContext, IOptionsMonitor<MonitorOptions> monitorOption, IMonitorHealthCheck monitorHealthCheck, IServiceLogger<AddRequestMonitorMiddleware> serviceLogger)', validate parameter 'monitorOption' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Monitors.AddRequestMonitorMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext,Microsoft.Extensions.Options.IOptionsMonitor{LetPortal.Core.Monitors.MonitorOptions},LetPortal.Core.Monitors.IMonitorHealthCheck,LetPortal.Core.Logger.IServiceLogger{LetPortal.Core.Monitors.AddRequestMonitorMiddleware})~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1031:Modify 'CheckHealthAsync' to catch a more specific allowed exception type, or rethrow the exception.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Monitors.LetPortalMonitorHealthCheck.CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Monitors.LetPortalMonitorHealthCheck.CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings. Replace this call in 'LetPortalMonitorHealthCheck.CheckHealthAsync(HealthCheckContext, [CancellationToken])' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Monitors.LetPortalMonitorHealthCheck.CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task LetPortalMonitorHealthCheckPublisher.PublishAsync(HealthReport report, CancellationToken cancellationToken)', validate parameter 'report' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Monitors.LetPortalMonitorHealthCheckPublisher.PublishAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthReport,System.Threading.CancellationToken)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1827:Count() is used where Any() could be used instead to improve performance.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Monitors.MonitorHealthCheck.CalculateAvgHealthCheck")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1816:MonitorHealthCheck.Dispose() calls GC.SuppressFinalize(object) on something other than itself. Change the call site to pass 'this' ('Me' in Visual Basic) instead.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Monitors.MonitorHealthCheck.Dispose")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1063:Modify 'MonitorHealthCheck.Dispose' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Monitors.MonitorHealthCheck.Dispose")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Core.Persistences.ConventionPackDefault.Register()' with a call to 'string.StartsWith(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.ConventionPackDefault.Register")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'EFConnection.EFConnection(IOptionsMonitor<DatabaseOptions> options)', validate parameter 'options' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.EFConnection.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{LetPortal.Core.Persistences.DatabaseOptions})")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task EFGenericRepository<T>.AddAsync(T entity)', validate parameter 'entity' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.EFGenericRepository`1.AddAsync(`0)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task EFGenericRepository<T>.AddBulkAsync(IEnumerable<T> entities)', validate parameter 'entities' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.EFGenericRepository`1.AddBulkAsync(System.Collections.Generic.IEnumerable{`0})~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ComparisonResult> EFGenericRepository<T>.Compare(T comparedEntity)', validate parameter 'comparedEntity' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.EFGenericRepository`1.Compare(`0)~System.Threading.Tasks.Task{LetPortal.Core.Persistences.ComparisonResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.EFGenericRepository`1.Compare(`0)~System.Threading.Tasks.Task{LetPortal.Core.Persistences.ComparisonResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task EFGenericRepository<T>.UpdateAsync(string id, T entity)', validate parameter 'entity' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.EFGenericRepository`1.UpdateAsync(System.String,`0)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'MongoConnection.MongoConnection(DatabaseOptions databaseOptions)', validate parameter 'databaseOptions' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.MongoConnection.#ctor(LetPortal.Core.Persistences.DatabaseOptions)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'void MongoConnection.ReloadOptions(DatabaseOptions databaseOptions)', validate parameter 'databaseOptions' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.MongoConnection.ReloadOptions(LetPortal.Core.Persistences.DatabaseOptions)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task MongoGenericRepository<T>.AddAsync(T entity)', validate parameter 'entity' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.MongoGenericRepository`1.AddAsync(`0)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.MongoGenericRepository`1.AddAsync(`0)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.MongoGenericRepository`1.AddBulkAsync(System.Collections.Generic.IEnumerable{`0})~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task MongoGenericRepository<T>.AddBulkAsync(IEnumerable<T> entities)', validate parameter 'entities' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.MongoGenericRepository`1.AddBulkAsync(System.Collections.Generic.IEnumerable{`0})~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.MongoGenericRepository`1.CheckIsExist(`0)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ComparisonResult> MongoGenericRepository<T>.Compare(T comparedEntity)', validate parameter 'comparedEntity' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.MongoGenericRepository`1.Compare(`0)~System.Threading.Tasks.Task{LetPortal.Core.Persistences.ComparisonResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.MongoGenericRepository`1.Compare(`0)~System.Threading.Tasks.Task{LetPortal.Core.Persistences.ComparisonResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.MongoGenericRepository`1.DeleteAsync(System.String)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.MongoGenericRepository`1.DeleteBulkAsync(System.Collections.Generic.IEnumerable{System.String})~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.MongoGenericRepository`1.ForceUpdateAsync(System.String,`0)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.MongoGenericRepository`1.GetAllAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Boolean)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`0}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.MongoGenericRepository`1.GetAllByIdsAsync(System.Collections.Generic.IEnumerable{System.String})~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`0}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.MongoGenericRepository`1.GetOneAsync(System.String)~System.Threading.Tasks.Task{`0}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.MongoGenericRepository`1.IsExistAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})~System.Threading.Tasks.Task{System.Boolean}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.MongoGenericRepository`1.UpdateAsync(System.String,`0)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task MongoGenericRepository<T>.UpdateAsync(string id, T entity)', validate parameter 'entity' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Persistences.MongoGenericRepository`1.UpdateAsync(System.String,`0)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1716:Rename virtual/interface member IServiceContext.Stop(Action) so that it no longer conflicts with the reserved language keyword 'Stop'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Services.IServiceContext.Stop(System.Action)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Contains(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Core.Services.NotifyExceptionLogMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext, Microsoft.Extensions.Options.IOptionsMonitor<LetPortal.Core.Monitors.MonitorOptions>, Microsoft.Extensions.Options.IOptionsMonitor<LetPortal.Core.Logger.LoggerOptions>, LetPortal.Core.Services.IServiceContext)' with a call to 'string.Contains(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Services.NotifyExceptionLogMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext,Microsoft.Extensions.Options.IOptionsMonitor{LetPortal.Core.Monitors.MonitorOptions},Microsoft.Extensions.Options.IOptionsMonitor{LetPortal.Core.Logger.LoggerOptions},LetPortal.Core.Services.IServiceContext)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Services.NotifyExceptionLogMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext,Microsoft.Extensions.Options.IOptionsMonitor{LetPortal.Core.Monitors.MonitorOptions},Microsoft.Extensions.Options.IOptionsMonitor{LetPortal.Core.Logger.LoggerOptions},LetPortal.Core.Services.IServiceContext)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1303:Method 'void ServiceContext.PushHealthCheck(PushHealthCheckModel pushHealthCheckModel)' passes a literal string as parameter 'message' of a call to 'Exception.Exception(string message, Exception innerException)'. Retrieve the following string(s) from a resource table instead: \"There are some erros when trying to notify monitor behavior in Service Management, please check stack trace.\".", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Services.ServiceContext.PushHealthCheck(LetPortal.Core.Monitors.Models.PushHealthCheckModel)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'void ServiceContext.PushHealthCheck(PushHealthCheckModel pushHealthCheckModel)', validate parameter 'pushHealthCheckModel' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Services.ServiceContext.PushHealthCheck(LetPortal.Core.Monitors.Models.PushHealthCheckModel)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'void ServiceContext.PushLog(PushLogModel pushLogModel)', validate parameter 'pushLogModel' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Services.ServiceContext.PushLog(LetPortal.Core.Logger.Models.PushLogModel)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1303:Method 'void ServiceContext.PushLog(PushLogModel pushLogModel)' passes a literal string as parameter 'message' of a call to 'Exception.Exception(string message, Exception innerException)'. Retrieve the following string(s) from a resource table instead: \"There are some erros when trying to notify log behavior in Service Management, please check stack trace.\".", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Services.ServiceContext.PushLog(LetPortal.Core.Logger.Models.PushLogModel)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2234:Modify 'ServiceContext.Run(Action)' to call 'HttpClient.PutAsync(Uri, HttpContent)' instead of 'HttpClient.PutAsync(string, HttpContent)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Services.ServiceContext.Run(System.Action)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2000:Call System.IDisposable.Dispose on object created by 'new StringContent(string.Empty)' before all references to it are out of scope.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Services.ServiceContext.Run(System.Action)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1303:Method 'void ServiceContext.Run(Action postAction)' passes a literal string as parameter 'message' of a call to 'Exception.Exception(string message, Exception innerException)'. Retrieve the following string(s) from a resource table instead: \"There are some erros when trying to notify stop behavior in Service Management, please check stack trace.\".", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Services.ServiceContext.Run(System.Action)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1303:Method 'void ServiceContext.Start(Action postAction)' passes a literal string as parameter 'message' of a call to 'Exception.Exception(string message, Exception innerException)'. Retrieve the following string(s) from a resource table instead: \"There are some erros when trying to connect Service Management, please check stack trace.\".", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Services.ServiceContext.Start(System.Action)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2234:Modify 'ServiceContext.Stop(Action)' to call 'HttpClient.GetAsync(Uri)' instead of 'HttpClient.GetAsync(string)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Services.ServiceContext.Stop(System.Action)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1303:Method 'void ServiceContext.Stop(Action postAction)' passes a literal string as parameter 'message' of a call to 'Exception.Exception(string message, Exception innerException)'. Retrieve the following string(s) from a resource table instead: \"There are some erros when trying to notify stop behavior in Service Management, please check stack trace.\".", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Services.ServiceContext.Stop(System.Action)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'object ConvertUtil.MoveValueBetweenTwoObjects(object sourceObject, object targetObject)', validate parameter 'sourceObject' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Utils.ConvertUtil.MoveValueBetweenTwoObjects(System.Object,System.Object)~System.Object")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'byte.ToString(string)' could vary based on the current user's locale settings. Replace this call in 'CryptoUtil.ToSHA256(string)' with a call to 'byte.ToString(string, IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Utils.CryptoUtil.ToSHA256(System.String)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'int.ToString()' could vary based on the current user's locale settings. Replace this call in 'DateUtil.GetShortMonthOfDate(DateTime)' with a call to 'int.ToString(IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Utils.DateUtil.GetShortMonthOfDate(System.DateTime)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Utils.DiagnosticUtil.GetCpuUsage~System.Threading.Tasks.Task{System.Double}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'IEnumerable<T> ReflectionUtil.GetAllInstances<T>(Assembly assembly)', validate parameter 'assembly' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Utils.ReflectionUtil.GetAllInstances``1(System.Reflection.Assembly)~System.Collections.Generic.IEnumerable{``0}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Equals(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Core.Utils.StringUtil.GetAllDoubleCurlyBraces(string, bool, System.Collections.Generic.IEnumerable<string>)' with a call to 'string.Equals(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Utils.StringUtil.GetAllDoubleCurlyBraces(System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})~System.String[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'byte[] StringUtil.GetBytes(string str)', validate parameter 'str' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Utils.StringUtil.GetBytes(System.String)~System.Byte[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Replace(string, string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Core.Utils.StringUtil.ReplaceDoubleCurlyBraces(string, System.Collections.Generic.IEnumerable<System.Tuple<string, string, bool>>)' with a call to 'string.Replace(string, string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Utils.StringUtil.ReplaceDoubleCurlyBraces(System.String,System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String,System.Boolean}})~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'string StringUtil.ReplaceDoubleCurlyBraces(string str, IEnumerable<Tuple<string, string, bool>> tuples)', validate parameter 'str' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Utils.StringUtil.ReplaceDoubleCurlyBraces(System.String,System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String,System.Boolean}})~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'void EFVersionContext.BulkInsertData<T>(T[] entities)', validate parameter 'entities' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Versions.EFVersionContext.BulkInsertData``1(``0[])")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1063:Modify 'EFVersionContext.Dispose' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Versions.EFVersionContext.Dispose")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1816:Change EFVersionContext.Dispose() to call GC.SuppressFinalize(object). This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Versions.EFVersionContext.Dispose")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'void EFVersionContext.InsertData<T>(T entity)', validate parameter 'entity' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Versions.EFVersionContext.InsertData``1(``0)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'void EFVersionContext.UpdateData<T>(string id, T entity)', validate parameter 'entity' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Versions.EFVersionContext.UpdateData``1(System.String,``0)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'MongoVersionContext.MongoVersionContext(DatabaseOptions databaseOptions)', validate parameter 'databaseOptions' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Versions.MongoVersionContext.#ctor(LetPortal.Core.Persistences.DatabaseOptions)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'void MongoVersionContext.BulkInsertData<T>(T[] entities)', validate parameter 'entities' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Versions.MongoVersionContext.BulkInsertData``1(``0[])")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1822:Member GetEntityName does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Versions.MongoVersionContext.GetEntityName(System.Type)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'void MongoVersionContext.InsertData<T>(T entity)', validate parameter 'entity' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Versions.MongoVersionContext.InsertData``1(``0)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'void MongoVersionContext.UpdateData<T>(string id, T entity)', validate parameter 'entity' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Versions.MongoVersionContext.UpdateData``1(System.String,``0)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'int.Parse(string)' could vary based on the current user's locale settings. Replace this call in 'Version.GetNumber()' with a call to 'int.Parse(string, IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Versions.Version.GetNumber~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'int VersionExtensions.GetNumber(IVersion version)', validate parameter 'version' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Versions.VersionExtensions.GetNumber(LetPortal.Core.Versions.IVersion)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'int.Parse(string)' could vary based on the current user's locale settings. Replace this call in 'string.ToVersionNumber()' with a call to 'int.Parse(string, IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Versions.VersionExtensions.ToVersionNumber(System.String)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'int VersionExtensions.ToVersionNumber(string versionNumber)', validate parameter 'versionNumber' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Core.Versions.VersionExtensions.ToVersionNumber(System.String)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1056:Change the type of property StoredFile.DownloadableUrl from string to System.Uri.", Justification = "<Pending>", Scope = "member", Target = "~P:LetPortal.Core.Files.StoredFile.DownloadableUrl")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:LetPortal.Core.LetPortalMiddlewareOptions.SkipCheckUrls")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2227:Change 'StatusCodes' to be read-only by removing the property setter.", Justification = "<Pending>", Scope = "member", Target = "~P:LetPortal.Core.Logger.LoggerNotifyOptions.StatusCodes")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2227:Change 'Urls' to be read-only by removing the property setter.", Justification = "<Pending>", Scope = "member", Target = "~P:LetPortal.Core.Logger.LoggerNotifyOptions.Urls")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2227:Change 'StatusCodes' to be read-only by removing the property setter.", Justification = "<Pending>", Scope = "member", Target = "~P:LetPortal.Core.Logger.LoggerNotifyUrl.StatusCodes")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1056:Change the type of property LoggerNotifyUrl.UrlPath from string to System.Uri.", Justification = "<Pending>", Scope = "member", Target = "~P:LetPortal.Core.Logger.LoggerNotifyUrl.UrlPath")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1056:Change the type of property PushLogModel.HttpRequestUrl from string to System.Uri.", Justification = "<Pending>", Scope = "member", Target = "~P:LetPortal.Core.Logger.Models.PushLogModel.HttpRequestUrl")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2227:Change 'StackTraces' to be read-only by removing the property setter.", Justification = "<Pending>", Scope = "member", Target = "~P:LetPortal.Core.Logger.Models.PushLogModel.StackTraces")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2227:Change 'Properties' to be read-only by removing the property setter.", Justification = "<Pending>", Scope = "member", Target = "~P:LetPortal.Core.Persistences.ComparisonEntity.Properties")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2227:Change 'MongoDB' to be read-only by removing the property setter.", Justification = "<Pending>", Scope = "member", Target = "~P:LetPortal.Core.Persistences.MapperOptions.MongoDB")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2227:Change 'MySQL' to be read-only by removing the property setter.", Justification = "<Pending>", Scope = "member", Target = "~P:LetPortal.Core.Persistences.MapperOptions.MySQL")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2227:Change 'PostgreSQL' to be read-only by removing the property setter.", Justification = "<Pending>", Scope = "member", Target = "~P:LetPortal.Core.Persistences.MapperOptions.PostgreSQL")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2227:Change 'SQLServer' to be read-only by removing the property setter.", Justification = "<Pending>", Scope = "member", Target = "~P:LetPortal.Core.Persistences.MapperOptions.SQLServer")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'Constants' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Core.Constants")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1032:Add the following constructor to CoreException: public CoreException(string message, Exception innerException).", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Core.Exceptions.CoreException")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'ErrorCodes' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Core.Exceptions.ErrorCodes")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1001:Type 'HttpClientProvider' owns disposable field(s) 'httpClient' but is not disposable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Core.Https.HttpClientProvider")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1063:Provide an overridable implementation of Dispose(bool) on 'MonitorHealthCheck' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Core.Monitors.MonitorHealthCheck")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1018:Specify AttributeUsage on EntityCollectionAttribute.", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Core.Persistences.Attributes.EntityCollectionAttribute")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1720:Identifier 'String' contains type name", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Core.Security.ClaimValueType")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'PortalClaimStandards' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Core.Security.PortalClaimStandards")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'ConvertUtil' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Core.Utils.ConvertUtil")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'CryptoUtil' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Core.Utils.CryptoUtil")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'DataUtil' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Core.Utils.DataUtil")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'DateUtil' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Core.Utils.DateUtil")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'DiagnosticUtil' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Core.Utils.DiagnosticUtil")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'NetUtil' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Core.Utils.NetUtil")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'RandomUtil' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Core.Utils.RandomUtil")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'StringUtil' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Core.Utils.StringUtil")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1063:Provide an overridable implementation of Dispose(bool) on 'EFVersionContext' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Core.Versions.EFVersionContext")]
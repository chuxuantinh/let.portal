using System.Collections.Generic;
using LetPortal.CMS.Core.Abstractions;
using LetPortal.Core.Persistences;
using LetPortal.Core.Persistences.Attributes;

namespace LetPortal.CMS.Core.Entities
{
    [EntityCollection(Name = "themes")]
    public class Theme : Entity
    {
        public string Name { get; set; }

        public string Description { get; set; }

        public string ScreenShotUri { get; set; }

        public string Creator { get; set; }

        public List<ThemePart> SectionParts { get; set; }

        public List<ThemeManifest> ThemeManifests { get; set; }
    }

    /// <summary>
    /// Each ThemePart will be generated by [ThemePart] Annotation in ViewComponent
    /// </summary>
    public class ThemePart
    {
        /// <summary>
        /// The name in ThemePart 
        /// </summary>
        public string Name { get; set; }

        public BindingType BindingType { get; set; }

        /// <summary>
        /// Each theme section should declare [ConfigurablePage] to help LetPortal scan
        /// </summary>
        public IList<ThemeConfigurableManifest> ConfigurableManifests { get; set; }
    }

    public class ThemeConfigurableManifest
    {
        /// <summary>
        /// This is a property name of Theme Part Type
        /// </summary>
        public string Key { get; set; }

        /// <summary>
        /// This will help the theme or site can be indicated a editable control
        /// </summary>
        public ManifestEditorType EditorType { get; set; } = ManifestEditorType.Textbox;
    }

    public class ThemeManifest
    {
        /// <summary>
        /// Use this key to map SiteManifest
        /// </summary>
        public string Key { get; set; }

        /// <summary>
        /// This will help the theme or site can be indicated a editable control
        /// </summary>
        public ManifestEditorType EditorType { get; set; } = ManifestEditorType.Textbox;
    }
}

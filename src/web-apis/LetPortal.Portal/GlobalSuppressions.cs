// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1720:Identifier 'Decimal' contains type name", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Portal.Constants.MapperConstants.Decimal")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1720:Identifier 'Double' contains type name", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Portal.Constants.MapperConstants.Double")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1720:Identifier 'Float' contains type name", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Portal.Constants.MapperConstants.Float")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1720:Identifier 'Int' contains type name", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Portal.Constants.MapperConstants.Int")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1720:Identifier 'Long' contains type name", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Portal.Constants.MapperConstants.Long")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1720:Identifier 'String' contains type name", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Portal.Constants.MapperConstants.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1051:Do not declare visible instance fields", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Portal.Executions.DynamicQueryBuilderOptions.ContainsOperatorFormat")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1051:Do not declare visible instance fields", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Portal.Executions.DynamicQueryBuilderOptions.DateCompareFormat")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1051:Do not declare visible instance fields", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Portal.Executions.DynamicQueryBuilderOptions.OrderByFormat")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1707:Remove the underscores from member name LetPortal.Portal.Services.Recoveries.BackupService.APP_FILE.", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Portal.Services.Recoveries.BackupService.APP_FILE")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1707:Remove the underscores from member name LetPortal.Portal.Services.Recoveries.BackupService.CHART_FILE.", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Portal.Services.Recoveries.BackupService.CHART_FILE")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1707:Remove the underscores from member name LetPortal.Portal.Services.Recoveries.BackupService.DATABASE_FILE.", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Portal.Services.Recoveries.BackupService.DATABASE_FILE")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1707:Remove the underscores from member name LetPortal.Portal.Services.Recoveries.BackupService.DYNAMICLIST_FILE.", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Portal.Services.Recoveries.BackupService.DYNAMICLIST_FILE")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1707:Remove the underscores from member name LetPortal.Portal.Services.Recoveries.BackupService.PAGE_FILE.", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Portal.Services.Recoveries.BackupService.PAGE_FILE")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1707:Remove the underscores from member name LetPortal.Portal.Services.Recoveries.BackupService.STANDARD_FILE.", Justification = "<Pending>", Scope = "member", Target = "~F:LetPortal.Portal.Services.Recoveries.BackupService.STANDARD_FILE")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings. Replace this call in 'ParsingParam.GetFullParam()' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Databases.Models.ParsingParam.GetFullParam~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object)' could vary based on the current user's locale settings. Replace this call in 'ParsingParam.GetNameParam()' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Databases.Models.ParsingParam.GetNameParam~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<object> ChartReportProjection.ProjectionFromDataTable(DataTable dataTable, string mappringProjection)', validate parameter 'dataTable' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.ChartReportProjection.ProjectionFromDataTable(System.Data.DataTable,System.String)~System.Threading.Tasks.Task{System.Object}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Replace(string, string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.ChartReportQueryBuilder.Build()' with a call to 'string.Replace(string, string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.ChartReportQueryBuilder.Build~LetPortal.Portal.Executions.ChartReportQuery")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings. Replace this call in 'ChartReportQueryBuilder.Build()' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.ChartReportQueryBuilder.Build~LetPortal.Portal.Executions.ChartReportQuery")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings. Replace this call in 'ChartReportQueryBuilder.GenerateChartColumns(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.ChartReportQueryBuilder.GenerateChartColumns(System.String)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'DateTime.Parse(string)' could vary based on the current user's locale settings. Replace this call in 'ChartReportQueryBuilder.GenerateFilterColumns(IEnumerable<ChartFilterValue>, ref List<ChartReportParameter>)' with a call to 'DateTime.Parse(string, IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.ChartReportQueryBuilder.GenerateFilterColumns(System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Charts.ChartFilterValue},System.Collections.Generic.List{LetPortal.Portal.Executions.ChartReportParameter}@)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Contains(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.ChartReportQueryBuilder.GenerateFilterColumns(System.Collections.Generic.IEnumerable<LetPortal.Portal.Models.Charts.ChartFilterValue>, ref System.Collections.Generic.List<LetPortal.Portal.Executions.ChartReportParameter>)' with a call to 'string.Contains(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.ChartReportQueryBuilder.GenerateFilterColumns(System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Charts.ChartFilterValue},System.Collections.Generic.List{LetPortal.Portal.Executions.ChartReportParameter}@)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings. Replace this call in 'ChartReportQueryBuilder.GenerateRealTimeComparision(string, DateTime, DateTime, ref List<ChartReportParameter>)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.ChartReportQueryBuilder.GenerateRealTimeComparision(System.String,System.DateTime,System.DateTime,System.Collections.Generic.List{LetPortal.Portal.Executions.ChartReportParameter}@)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object)' could vary based on the current user's locale settings. Replace this call in 'ChartReportQueryBuilder.GetFieldFormat(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.ChartReportQueryBuilder.GetFieldFormat(System.String)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object)' could vary based on the current user's locale settings. Replace this call in 'DynamicQueryBuilder.AddFilter(List<FilterGroup>)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.DynamicQueryBuilder.AddFilter(System.Collections.Generic.List{LetPortal.Portal.Models.DynamicLists.FilterGroup})~LetPortal.Portal.Executions.IDynamicQueryBuilder")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings. Replace this call in 'DynamicQueryBuilder.AddPagination(int, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.DynamicQueryBuilder.AddPagination(System.Int32,System.Int32)~LetPortal.Portal.Executions.IDynamicQueryBuilder")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object)' could vary based on the current user's locale settings. Replace this call in 'DynamicQueryBuilder.AddSort(List<SortableField>)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.DynamicQueryBuilder.AddSort(System.Collections.Generic.List{LetPortal.Portal.Models.DynamicLists.SortableField})~LetPortal.Portal.Executions.IDynamicQueryBuilder")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object)' could vary based on the current user's locale settings. Replace this call in 'DynamicQueryBuilder.AddTextSearch(string, IEnumerable<string>)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.DynamicQueryBuilder.AddTextSearch(System.String,System.Collections.Generic.IEnumerable{System.String})~LetPortal.Portal.Executions.IDynamicQueryBuilder")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'IDynamicQueryBuilder DynamicQueryBuilder.AddTextSearch(string text, IEnumerable<string> searchFields)', validate parameter 'searchFields' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.DynamicQueryBuilder.AddTextSearch(System.String,System.Collections.Generic.IEnumerable{System.String})~LetPortal.Portal.Executions.IDynamicQueryBuilder")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Replace(string, string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.DynamicQueryBuilder.Build()' with a call to 'string.Replace(string, string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.DynamicQueryBuilder.Build~LetPortal.Portal.Executions.DynamicQuery")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'int.ToString()' could vary based on the current user's locale settings. Replace this call in 'DynamicQueryBuilder.Build()' with a call to 'int.ToString(IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.DynamicQueryBuilder.Build~LetPortal.Portal.Executions.DynamicQuery")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1304:The behavior of 'string.ToUpper()' could vary based on the current user's locale settings. Replace this call in 'DynamicQueryBuilder.Build()' with a call to 'string.ToUpper(CultureInfo)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.DynamicQueryBuilder.Build~LetPortal.Portal.Executions.DynamicQuery")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object)' could vary based on the current user's locale settings. Replace this call in 'DynamicQueryBuilder.GetOperator(FilterOperator, [string])' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.DynamicQueryBuilder.GetOperator(LetPortal.Portal.Models.DynamicLists.FilterOperator,System.String)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Replace(string, string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.DynamicQueryBuilder.Init(string, System.Collections.Generic.List<LetPortal.Portal.Models.DynamicLists.FilledParameter>, System.Action<LetPortal.Portal.Executions.DynamicQueryBuilderOptions>)' with a call to 'string.Replace(string, string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.DynamicQueryBuilder.Init(System.String,System.Collections.Generic.List{LetPortal.Portal.Models.DynamicLists.FilledParameter},System.Action{LetPortal.Portal.Executions.DynamicQueryBuilderOptions})~LetPortal.Portal.Executions.IDynamicQueryBuilder")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<IEnumerable<EntitySchema>> MongoAnalyzeDatabase.FetchAllEntitiesFromDatabase(DatabaseConnection databaseConnection)', validate parameter 'databaseConnection' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoAnalyzeDatabase.FetchAllEntitiesFromDatabase(LetPortal.Portal.Entities.Databases.DatabaseConnection)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LetPortal.Portal.Entities.EntitySchemas.EntitySchema}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1822:Member GetTypeByBsonDocument does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoAnalyzeDatabase.GetTypeByBsonDocument(MongoDB.Bson.BsonValue)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'long.Parse(string)' could vary based on the current user's locale settings. Replace this call in 'MongoDynamicListQueryDatabase.BuildOperator(FilterOption)' with a call to 'long.Parse(string, IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoDynamicListQueryDatabase.BuildOperator(LetPortal.Portal.Models.DynamicLists.FilterOption)~MongoDB.Driver.FilterDefinition{MongoDB.Bson.BsonDocument}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1822:Member BuildOperator does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoDynamicListQueryDatabase.BuildOperator(LetPortal.Portal.Models.DynamicLists.FilterOption)~MongoDB.Driver.FilterDefinition{MongoDB.Bson.BsonDocument}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<DynamicListResponseDataModel> MongoDynamicListQueryDatabase.Query(DatabaseConnection databaseConnection, DynamicList dynamicList, DynamicListFetchDataModel fetchDataModel)', validate parameter 'dynamicList' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoDynamicListQueryDatabase.Query(LetPortal.Portal.Entities.Databases.DatabaseConnection,LetPortal.Portal.Entities.SectionParts.DynamicList,LetPortal.Portal.Models.DynamicLists.DynamicListFetchDataModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.DynamicLists.DynamicListResponseDataModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Replace(string, string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.Mongo.MongoDynamicListQueryDatabase.Query(LetPortal.Portal.Entities.Databases.DatabaseConnection, LetPortal.Portal.Entities.SectionParts.DynamicList, LetPortal.Portal.Models.DynamicLists.DynamicListFetchDataModel)' with a call to 'string.Replace(string, string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoDynamicListQueryDatabase.Query(LetPortal.Portal.Entities.Databases.DatabaseConnection,LetPortal.Portal.Entities.SectionParts.DynamicList,LetPortal.Portal.Models.DynamicLists.DynamicListFetchDataModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.DynamicLists.DynamicListResponseDataModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExecutionChartResponseModel> MongoExecutionChartReport.Execute(ExecutionChartReportModel model)', validate parameter 'model' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoExecutionChartReport.Execute(LetPortal.Portal.Executions.ExecutionChartReportModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExecutionChartResponseModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'DateTime.Parse(string)' could vary based on the current user's locale settings. Replace this call in 'MongoExecutionChartReport.GetFilter(ChartFilterValue)' with a call to 'DateTime.Parse(string, IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoExecutionChartReport.GetFilter(LetPortal.Portal.Models.Charts.ChartFilterValue)~MongoDB.Bson.BsonDocument")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Contains(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.Mongo.MongoExecutionChartReport.GetFilter(LetPortal.Portal.Models.Charts.ChartFilterValue)' with a call to 'string.Contains(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoExecutionChartReport.GetFilter(LetPortal.Portal.Models.Charts.ChartFilterValue)~MongoDB.Bson.BsonDocument")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.Mongo.MongoExecutionDatabase.EliminateRedundantFormat(string)' with a call to 'string.IndexOf(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoExecutionDatabase.EliminateRedundantFormat(System.String)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExecuteDynamicResultModel> MongoExecutionDatabase.Execute(DatabaseConnection databaseConnection, string formattedString, IEnumerable<ExecuteParamModel> parameters)', validate parameter 'databaseConnection' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoExecutionDatabase.Execute(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.ExecuteDynamicResultModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1031:Modify 'Execute' to catch a more specific allowed exception type, or rethrow the exception.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoExecutionDatabase.Execute(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.ExecuteDynamicResultModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Replace(string, string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.Mongo.MongoExtractionDatabase.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection, string, System.Collections.Generic.IEnumerable<LetPortal.Portal.Models.Databases.ExecuteParamModel>)' with a call to 'string.Replace(string, string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoExtractionDatabase.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Databases.ExtractingSchemaQueryModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExtractingSchemaQueryModel> MongoExtractionDatabase.Extract(DatabaseConnection database, string formattedString, IEnumerable<ExecuteParamModel> parameters)', validate parameter 'database' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoExtractionDatabase.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Databases.ExtractingSchemaQueryModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<List<DatasourceModel>> MongoExtractionDatasource.ExtractionDatasource(DatabaseConnection databaseConnection, string formattedQueryString, string outputProjection)', validate parameter 'databaseConnection' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoExtractionDatasource.ExtractionDatasource(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.String)~System.Threading.Tasks.Task{System.Collections.Generic.List{LetPortal.Portal.Models.DatasourceModel}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.Mongo.MongoQueryExecution.EliminateRedundantFormat(string)' with a call to 'string.IndexOf(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoQueryExecution.EliminateRedundantFormat(System.String)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<dynamic> MongoQueryExecution.ExecuteAsync(IMongoDatabase mongoDatabase, string formattedString, string mappingProjection, IEnumerable<ExecuteParamModel> parameters, List<PipelineStageDefinition<BsonDocument, BsonDocument>> filterStages = null)', validate parameter 'mongoDatabase' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoQueryExecution.ExecuteAsync(MongoDB.Driver.IMongoDatabase,System.String,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel},System.Collections.Generic.List{MongoDB.Driver.PipelineStageDefinition{MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument}})~System.Threading.Tasks.Task{}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<byte[]> MongoStoreFileDatabase.GetFileAsync(StoredFile storedFile, DatabaseOptions databaseOptions)', validate parameter 'storedFile' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoStoreFileDatabase.GetFileAsync(LetPortal.Core.Files.StoredFile,LetPortal.Core.Persistences.DatabaseOptions)~System.Threading.Tasks.Task{System.Byte[]}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1822:Member GetMongoBucket does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoStoreFileDatabase.GetMongoBucket(LetPortal.Core.Persistences.DatabaseOptions)~MongoDB.Driver.GridFS.GridFSBucket")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<StoredFile> MongoStoreFileDatabase.StoreFileAsync(IFormFile file, string tempFilePath, DatabaseOptions databaseOptions)', validate parameter 'file' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.Mongo.MongoStoreFileDatabase.StoreFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String,LetPortal.Core.Persistences.DatabaseOptions)~System.Threading.Tasks.Task{LetPortal.Core.Files.StoredFile}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<IEnumerable<EntitySchema>> MySqlAnalyzeDatabase.FetchAllEntitiesFromDatabase(DatabaseConnection databaseConnection)', validate parameter 'databaseConnection' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlAnalyzeDatabase.FetchAllEntitiesFromDatabase(LetPortal.Portal.Entities.Databases.DatabaseConnection)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LetPortal.Portal.Entities.EntitySchemas.EntitySchema}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2100:Review if the query string passed to 'MySqlCommand.MySqlCommand(string cmdText, MySqlConnection connection)' in 'Query', accepts any user input.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlDynamicListQueryDatabase.Query(LetPortal.Portal.Entities.Databases.DatabaseConnection,LetPortal.Portal.Entities.SectionParts.DynamicList,LetPortal.Portal.Models.DynamicLists.DynamicListFetchDataModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.DynamicLists.DynamicListResponseDataModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<DynamicListResponseDataModel> MySqlDynamicListQueryDatabase.Query(DatabaseConnection databaseConnection, DynamicList dynamicList, DynamicListFetchDataModel fetchDataModel)', validate parameter 'fetchDataModel' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlDynamicListQueryDatabase.Query(LetPortal.Portal.Entities.Databases.DatabaseConnection,LetPortal.Portal.Entities.SectionParts.DynamicList,LetPortal.Portal.Models.DynamicLists.DynamicListFetchDataModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.DynamicLists.DynamicListResponseDataModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExecutionChartResponseModel> MySqlExecutionChartReport.Execute(ExecutionChartReportModel model)', validate parameter 'model' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlExecutionChartReport.Execute(LetPortal.Portal.Executions.ExecutionChartReportModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExecutionChartResponseModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2100:Review if the query string passed to 'MySqlCommand.MySqlCommand(string cmdText, MySqlConnection connection)' in 'Execute', accepts any user input.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlExecutionChartReport.Execute(LetPortal.Portal.Executions.ExecutionChartReportModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExecutionChartResponseModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.MySQL.MySqlExecutionDatabase.Execute(LetPortal.Portal.Entities.Databases.DatabaseConnection, string, System.Collections.Generic.IEnumerable<LetPortal.Portal.Models.Databases.ExecuteParamModel>)' with a call to 'string.StartsWith(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlExecutionDatabase.Execute(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.ExecuteDynamicResultModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2100:Review if the query string passed to 'MySqlCommand.MySqlCommand(string cmdText, MySqlConnection connection)' in 'Execute', accepts any user input.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlExecutionDatabase.Execute(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.ExecuteDynamicResultModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1304:The behavior of 'string.ToUpper()' could vary based on the current user's locale settings. Replace this call in 'MySqlExecutionDatabase.Execute(DatabaseConnection, string, IEnumerable<ExecuteParamModel>)' with a call to 'string.ToUpper(CultureInfo)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlExecutionDatabase.Execute(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.ExecuteDynamicResultModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExecuteDynamicResultModel> MySqlExecutionDatabase.Execute(DatabaseConnection databaseConnection, string formattedString, IEnumerable<ExecuteParamModel> parameters)', validate parameter 'databaseConnection' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlExecutionDatabase.Execute(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.ExecuteDynamicResultModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExtractionChartFilter> MySqlExtractionChartQuery.Extract(DatabaseConnection databaseConnection, string formattedString, IEnumerable<ChartParameterValue> parameterValues)', validate parameter 'formattedString' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlExtractionChartQuery.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Charts.ChartParameterValue})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExtractionChartFilter}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object)' could vary based on the current user's locale settings. Replace this call in 'MySqlExtractionChartQuery.Extract(DatabaseConnection, string, IEnumerable<ChartParameterValue>)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlExtractionChartQuery.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Charts.ChartParameterValue})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExtractionChartFilter}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Replace(string, string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.MySQL.MySqlExtractionChartQuery.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection, string, System.Collections.Generic.IEnumerable<LetPortal.Portal.Models.Charts.ChartParameterValue>)' with a call to 'string.Replace(string, string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlExtractionChartQuery.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Charts.ChartParameterValue})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExtractionChartFilter}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2100:Review if the query string passed to 'MySqlCommand.MySqlCommand(string cmdText, MySqlConnection connection)' in 'Extract', accepts any user input.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlExtractionChartQuery.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Charts.ChartParameterValue})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExtractionChartFilter}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Replace(string, string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.MySQL.MySqlExtractionDatabase.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection, string, System.Collections.Generic.IEnumerable<LetPortal.Portal.Models.Databases.ExecuteParamModel>)' with a call to 'string.Replace(string, string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlExtractionDatabase.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Databases.ExtractingSchemaQueryModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2100:Review if the query string passed to 'MySqlCommand.MySqlCommand(string cmdText, MySqlConnection connection)' in 'Extract', accepts any user input.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlExtractionDatabase.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Databases.ExtractingSchemaQueryModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object)' could vary based on the current user's locale settings. Replace this call in 'MySqlExtractionDatabase.Extract(DatabaseConnection, string, IEnumerable<ExecuteParamModel>)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlExtractionDatabase.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Databases.ExtractingSchemaQueryModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExtractingSchemaQueryModel> MySqlExtractionDatabase.Extract(DatabaseConnection database, string formattedString, IEnumerable<ExecuteParamModel> parameters)', validate parameter 'database' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlExtractionDatabase.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Databases.ExtractingSchemaQueryModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Replace(string, string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.MySQL.MySqlExtractionDatabase.ReplaceAllConstants(string)' with a call to 'string.Replace(string, string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlExtractionDatabase.ReplaceAllConstants(System.String)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<List<DatasourceModel>> MySqlExtractionDatasource.ExtractionDatasource(DatabaseConnection databaseConnection, string formattedQueryString, string outputProjection)', validate parameter 'databaseConnection' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlExtractionDatasource.ExtractionDatasource(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.String)~System.Threading.Tasks.Task{System.Collections.Generic.List{LetPortal.Portal.Models.DatasourceModel}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2100:Review if the query string passed to 'MySqlCommand.MySqlCommand(string cmdText, MySqlConnection connection)' in 'ExtractionDatasource', accepts any user input.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlExtractionDatasource.ExtractionDatasource(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.String)~System.Threading.Tasks.Task{System.Collections.Generic.List{LetPortal.Portal.Models.DatasourceModel}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<byte[]> MySqlStoreFileDatabase.GetFileAsync(StoredFile storedFile, DatabaseOptions databaseOptions)', validate parameter 'storedFile' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlStoreFileDatabase.GetFileAsync(LetPortal.Core.Files.StoredFile,LetPortal.Core.Persistences.DatabaseOptions)~System.Threading.Tasks.Task{System.Byte[]}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<StoredFile> MySqlStoreFileDatabase.StoreFileAsync(IFormFile file, string tempFilePath, DatabaseOptions databaseOptions)', validate parameter 'databaseOptions' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlStoreFileDatabase.StoreFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String,LetPortal.Core.Persistences.DatabaseOptions)~System.Threading.Tasks.Task{LetPortal.Core.Files.StoredFile}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<StoredFile> MySqlStoreFileDatabase.StoreFileAsync(string localFilePath, DatabaseOptions databaseOptions)', validate parameter 'databaseOptions' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.MySQL.MySqlStoreFileDatabase.StoreFileAsync(System.String,LetPortal.Core.Persistences.DatabaseOptions)~System.Threading.Tasks.Task{LetPortal.Core.Files.StoredFile}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<IEnumerable<EntitySchema>> PostgreAnalyzeDatabase.FetchAllEntitiesFromDatabase(DatabaseConnection databaseConnection)', validate parameter 'databaseConnection' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreAnalyzeDatabase.FetchAllEntitiesFromDatabase(LetPortal.Portal.Entities.Databases.DatabaseConnection)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LetPortal.Portal.Entities.EntitySchemas.EntitySchema}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2100:Review if the query string passed to 'NpgsqlCommand.NpgsqlCommand(string cmdText, NpgsqlConnection connection)' in 'Query', accepts any user input.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreDynamicListQueryDatabase.Query(LetPortal.Portal.Entities.Databases.DatabaseConnection,LetPortal.Portal.Entities.SectionParts.DynamicList,LetPortal.Portal.Models.DynamicLists.DynamicListFetchDataModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.DynamicLists.DynamicListResponseDataModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<DynamicListResponseDataModel> PostgreDynamicListQueryDatabase.Query(DatabaseConnection databaseConnection, DynamicList dynamicList, DynamicListFetchDataModel fetchDataModel)', validate parameter 'fetchDataModel' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreDynamicListQueryDatabase.Query(LetPortal.Portal.Entities.Databases.DatabaseConnection,LetPortal.Portal.Entities.SectionParts.DynamicList,LetPortal.Portal.Models.DynamicLists.DynamicListFetchDataModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.DynamicLists.DynamicListResponseDataModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2100:Review if the query string passed to 'NpgsqlCommand.NpgsqlCommand(string cmdText, NpgsqlConnection connection)' in 'Execute', accepts any user input.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreExecutionChartReport.Execute(LetPortal.Portal.Executions.ExecutionChartReportModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExecutionChartResponseModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExecutionChartResponseModel> PostgreExecutionChartReport.Execute(ExecutionChartReportModel model)', validate parameter 'model' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreExecutionChartReport.Execute(LetPortal.Portal.Executions.ExecutionChartReportModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExecutionChartResponseModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.PostgreSql.PostgreExecutionDatabase.Execute(LetPortal.Portal.Entities.Databases.DatabaseConnection, string, System.Collections.Generic.IEnumerable<LetPortal.Portal.Models.Databases.ExecuteParamModel>)' with a call to 'string.StartsWith(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreExecutionDatabase.Execute(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.ExecuteDynamicResultModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1304:The behavior of 'string.ToUpper()' could vary based on the current user's locale settings. Replace this call in 'PostgreExecutionDatabase.Execute(DatabaseConnection, string, IEnumerable<ExecuteParamModel>)' with a call to 'string.ToUpper(CultureInfo)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreExecutionDatabase.Execute(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.ExecuteDynamicResultModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExecuteDynamicResultModel> PostgreExecutionDatabase.Execute(DatabaseConnection databaseConnection, string formattedString, IEnumerable<ExecuteParamModel> parameters)', validate parameter 'databaseConnection' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreExecutionDatabase.Execute(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.ExecuteDynamicResultModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2100:Review if the query string passed to 'string NpgsqlCommand.CommandText' in 'Execute', accepts any user input.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreExecutionDatabase.Execute(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.ExecuteDynamicResultModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExtractionChartFilter> PostgreExtractionChartQuery.Extract(DatabaseConnection databaseConnection, string formattedString, IEnumerable<ChartParameterValue> parameterValues)', validate parameter 'databaseConnection' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreExtractionChartQuery.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Charts.ChartParameterValue})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExtractionChartFilter}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2100:Review if the query string passed to 'NpgsqlCommand.NpgsqlCommand(string cmdText, NpgsqlConnection connection)' in 'Extract', accepts any user input.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreExtractionChartQuery.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Charts.ChartParameterValue})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExtractionChartFilter}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Replace(string, string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.PostgreSql.PostgreExtractionChartQuery.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection, string, System.Collections.Generic.IEnumerable<LetPortal.Portal.Models.Charts.ChartParameterValue>)' with a call to 'string.Replace(string, string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreExtractionChartQuery.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Charts.ChartParameterValue})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExtractionChartFilter}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object)' could vary based on the current user's locale settings. Replace this call in 'PostgreExtractionChartQuery.Extract(DatabaseConnection, string, IEnumerable<ChartParameterValue>)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreExtractionChartQuery.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Charts.ChartParameterValue})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExtractionChartFilter}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2100:Review if the query string passed to 'NpgsqlCommand.NpgsqlCommand(string cmdText, NpgsqlConnection connection)' in 'Extract', accepts any user input.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreExtractionDatabase.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Databases.ExtractingSchemaQueryModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Replace(string, string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.PostgreSql.PostgreExtractionDatabase.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection, string, System.Collections.Generic.IEnumerable<LetPortal.Portal.Models.Databases.ExecuteParamModel>)' with a call to 'string.Replace(string, string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreExtractionDatabase.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Databases.ExtractingSchemaQueryModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExtractingSchemaQueryModel> PostgreExtractionDatabase.Extract(DatabaseConnection database, string formattedString, IEnumerable<ExecuteParamModel> parameters)', validate parameter 'formattedString' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreExtractionDatabase.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Databases.ExtractingSchemaQueryModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object)' could vary based on the current user's locale settings. Replace this call in 'PostgreExtractionDatabase.Extract(DatabaseConnection, string, IEnumerable<ExecuteParamModel>)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreExtractionDatabase.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Databases.ExtractingSchemaQueryModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2100:Review if the query string passed to 'NpgsqlCommand.NpgsqlCommand(string cmdText, NpgsqlConnection connection)' in 'ExtractionDatasource', accepts any user input.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreExtractionDatasource.ExtractionDatasource(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.String)~System.Threading.Tasks.Task{System.Collections.Generic.List{LetPortal.Portal.Models.DatasourceModel}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<List<DatasourceModel>> PostgreExtractionDatasource.ExtractionDatasource(DatabaseConnection databaseConnection, string formattedQueryString, string outputProjection)', validate parameter 'databaseConnection' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreExtractionDatasource.ExtractionDatasource(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.String)~System.Threading.Tasks.Task{System.Collections.Generic.List{LetPortal.Portal.Models.DatasourceModel}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<byte[]> PostgreStoreFileDatabase.GetFileAsync(StoredFile storedFile, DatabaseOptions databaseOptions)', validate parameter 'databaseOptions' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreStoreFileDatabase.GetFileAsync(LetPortal.Core.Files.StoredFile,LetPortal.Core.Persistences.DatabaseOptions)~System.Threading.Tasks.Task{System.Byte[]}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<StoredFile> PostgreStoreFileDatabase.StoreFileAsync(IFormFile file, string tempFilePath, DatabaseOptions databaseOptions)', validate parameter 'file' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreStoreFileDatabase.StoreFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String,LetPortal.Core.Persistences.DatabaseOptions)~System.Threading.Tasks.Task{LetPortal.Core.Files.StoredFile}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<StoredFile> PostgreStoreFileDatabase.StoreFileAsync(string localFilePath, DatabaseOptions databaseOptions)', validate parameter 'databaseOptions' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreStoreFileDatabase.StoreFileAsync(System.String,LetPortal.Core.Persistences.DatabaseOptions)~System.Threading.Tasks.Task{LetPortal.Core.Files.StoredFile}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1801:Parameter fileName of method StoreFilePostgreSQL is never used. Remove the parameter or use it in the method body.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.PostgreSql.PostgreStoreFileDatabase.StoreFilePostgreSQL(System.String,System.String,LetPortal.Core.Persistences.DatabaseOptions)~System.Threading.Tasks.Task{LetPortal.Core.Files.StoredFile}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<IEnumerable<EntitySchema>> SqlServerAnalyzeDatabase.FetchAllEntitiesFromDatabase(DatabaseConnection databaseConnection)', validate parameter 'databaseConnection' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerAnalyzeDatabase.FetchAllEntitiesFromDatabase(LetPortal.Portal.Entities.Databases.DatabaseConnection)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LetPortal.Portal.Entities.EntitySchemas.EntitySchema}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2100:Review if the query string passed to 'SqlCommand.SqlCommand(string cmdText, SqlConnection connection)' in 'Query', accepts any user input.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerDynamicListQueryDatabase.Query(LetPortal.Portal.Entities.Databases.DatabaseConnection,LetPortal.Portal.Entities.SectionParts.DynamicList,LetPortal.Portal.Models.DynamicLists.DynamicListFetchDataModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.DynamicLists.DynamicListResponseDataModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<DynamicListResponseDataModel> SqlServerDynamicListQueryDatabase.Query(DatabaseConnection databaseConnection, DynamicList dynamicList, DynamicListFetchDataModel fetchDataModel)', validate parameter 'dynamicList' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerDynamicListQueryDatabase.Query(LetPortal.Portal.Entities.Databases.DatabaseConnection,LetPortal.Portal.Entities.SectionParts.DynamicList,LetPortal.Portal.Models.DynamicLists.DynamicListFetchDataModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.DynamicLists.DynamicListResponseDataModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExecutionChartResponseModel> SqlServerExecutionChartReport.Execute(ExecutionChartReportModel model)', validate parameter 'model' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerExecutionChartReport.Execute(LetPortal.Portal.Executions.ExecutionChartReportModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExecutionChartResponseModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2100:Review if the query string passed to 'SqlCommand.SqlCommand(string cmdText, SqlConnection connection)' in 'Execute', accepts any user input.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerExecutionChartReport.Execute(LetPortal.Portal.Executions.ExecutionChartReportModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExecutionChartResponseModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2100:Review if the query string passed to 'SqlCommand.SqlCommand(string cmdText, SqlConnection connection)' in 'Execute', accepts any user input.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerExecutionDatabase.Execute(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.ExecuteDynamicResultModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExecuteDynamicResultModel> SqlServerExecutionDatabase.Execute(DatabaseConnection databaseConnection, string formattedString, IEnumerable<ExecuteParamModel> parameters)', validate parameter 'databaseConnection' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerExecutionDatabase.Execute(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.ExecuteDynamicResultModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.SqlServer.SqlServerExecutionDatabase.Execute(LetPortal.Portal.Entities.Databases.DatabaseConnection, string, System.Collections.Generic.IEnumerable<LetPortal.Portal.Models.Databases.ExecuteParamModel>)' with a call to 'string.StartsWith(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerExecutionDatabase.Execute(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.ExecuteDynamicResultModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1304:The behavior of 'string.ToUpper()' could vary based on the current user's locale settings. Replace this call in 'SqlServerExecutionDatabase.Execute(DatabaseConnection, string, IEnumerable<ExecuteParamModel>)' with a call to 'string.ToUpper(CultureInfo)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerExecutionDatabase.Execute(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.ExecuteDynamicResultModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object)' could vary based on the current user's locale settings. Replace this call in 'SqlServerExtractionChartQuery.Extract(DatabaseConnection, string, IEnumerable<ChartParameterValue>)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerExtractionChartQuery.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Charts.ChartParameterValue})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExtractionChartFilter}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Replace(string, string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.SqlServer.SqlServerExtractionChartQuery.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection, string, System.Collections.Generic.IEnumerable<LetPortal.Portal.Models.Charts.ChartParameterValue>)' with a call to 'string.Replace(string, string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerExtractionChartQuery.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Charts.ChartParameterValue})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExtractionChartFilter}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExtractionChartFilter> SqlServerExtractionChartQuery.Extract(DatabaseConnection databaseConnection, string formattedString, IEnumerable<ChartParameterValue> parameterValues)', validate parameter 'formattedString' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerExtractionChartQuery.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Charts.ChartParameterValue})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExtractionChartFilter}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2100:Review if the query string passed to 'SqlCommand.SqlCommand(string cmdText, SqlConnection connection)' in 'Extract', accepts any user input.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerExtractionChartQuery.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Charts.ChartParameterValue})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExtractionChartFilter}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExtractingSchemaQueryModel> SqlServerExtractionDatabase.Extract(DatabaseConnection database, string formattedString, IEnumerable<ExecuteParamModel> parameters)', validate parameter 'formattedString' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerExtractionDatabase.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Databases.ExtractingSchemaQueryModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2100:Review if the query string passed to 'SqlCommand.SqlCommand(string cmdText, SqlConnection connection)' in 'Extract', accepts any user input.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerExtractionDatabase.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Databases.ExtractingSchemaQueryModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Replace(string, string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Executions.SqlServer.SqlServerExtractionDatabase.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection, string, System.Collections.Generic.IEnumerable<LetPortal.Portal.Models.Databases.ExecuteParamModel>)' with a call to 'string.Replace(string, string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerExtractionDatabase.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Databases.ExtractingSchemaQueryModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object)' could vary based on the current user's locale settings. Replace this call in 'SqlServerExtractionDatabase.Extract(DatabaseConnection, string, IEnumerable<ExecuteParamModel>)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerExtractionDatabase.Extract(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Databases.ExtractingSchemaQueryModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2100:Review if the query string passed to 'SqlCommand.SqlCommand(string cmdText, SqlConnection connection)' in 'ExtractionDatasource', accepts any user input.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerExtractionDatasource.ExtractionDatasource(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.String)~System.Threading.Tasks.Task{System.Collections.Generic.List{LetPortal.Portal.Models.DatasourceModel}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<List<DatasourceModel>> SqlServerExtractionDatasource.ExtractionDatasource(DatabaseConnection databaseConnection, string formattedQueryString, string outputProjection)', validate parameter 'databaseConnection' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerExtractionDatasource.ExtractionDatasource(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.String)~System.Threading.Tasks.Task{System.Collections.Generic.List{LetPortal.Portal.Models.DatasourceModel}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<byte[]> SqlServerStoreFileDatabase.GetFileAsync(StoredFile storedFile, DatabaseOptions databaseOptions)', validate parameter 'storedFile' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerStoreFileDatabase.GetFileAsync(LetPortal.Core.Files.StoredFile,LetPortal.Core.Persistences.DatabaseOptions)~System.Threading.Tasks.Task{System.Byte[]}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<StoredFile> SqlServerStoreFileDatabase.StoreFileAsync(IFormFile file, string tempFilePath, DatabaseOptions databaseOptions)', validate parameter 'file' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerStoreFileDatabase.StoreFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String,LetPortal.Core.Persistences.DatabaseOptions)~System.Threading.Tasks.Task{LetPortal.Core.Files.StoredFile}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<StoredFile> SqlServerStoreFileDatabase.StoreFileAsync(string localFilePath, DatabaseOptions databaseOptions)', validate parameter 'databaseOptions' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerStoreFileDatabase.StoreFileAsync(System.String,LetPortal.Core.Persistences.DatabaseOptions)~System.Threading.Tasks.Task{LetPortal.Core.Files.StoredFile}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1801:Parameter fileName of method StoreFileSqlServer is never used. Remove the parameter or use it in the method body.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Executions.SqlServer.SqlServerStoreFileDatabase.StoreFileSqlServer(System.String,System.String,LetPortal.Core.Persistences.DatabaseOptions)~System.Threading.Tasks.Task{LetPortal.Core.Files.StoredFile}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'MySqlMapper.MySqlMapper(MapperOptions mapperOptions)', validate parameter 'mapperOptions' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Mappers.MySQL.MySqlMapper.#ctor(LetPortal.Core.Persistences.MapperOptions)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'PostgreSqlMapper.PostgreSqlMapper(MapperOptions mapperOptions)', validate parameter 'mapperOptions' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Mappers.PostgreSql.PostgreSqlMapper.#ctor(LetPortal.Core.Persistences.MapperOptions)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'SqlServerMapper.SqlServerMapper(MapperOptions mapperOptions)', validate parameter 'mapperOptions' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Mappers.SqlServer.SqlServerMapper.#ctor(LetPortal.Core.Persistences.MapperOptions)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<IEnumerable<ComparisonResult>> InternalAppServiceProvider.CompareEntities(IEnumerable<App> apps)', validate parameter 'apps' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Providers.Apps.InternalAppServiceProvider.CompareEntities(System.Collections.Generic.IEnumerable{LetPortal.Portal.Entities.Apps.App})~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LetPortal.Core.Persistences.ComparisonResult}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task InternalAppServiceProvider.ForceUpdateApps(IEnumerable<App> apps)', validate parameter 'apps' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Providers.Apps.InternalAppServiceProvider.ForceUpdateApps(System.Collections.Generic.IEnumerable{LetPortal.Portal.Entities.Apps.App})~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<IEnumerable<ComparisonResult>> InternalChartServiceProvider.CompareCharts(IEnumerable<Chart> charts)', validate parameter 'charts' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Providers.Components.InternalChartServiceProvider.CompareCharts(System.Collections.Generic.IEnumerable{LetPortal.Portal.Entities.Components.Chart})~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LetPortal.Core.Persistences.ComparisonResult}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task InternalChartServiceProvider.ForceUpdateCharts(IEnumerable<Chart> charts)', validate parameter 'charts' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Providers.Components.InternalChartServiceProvider.ForceUpdateCharts(System.Collections.Generic.IEnumerable{LetPortal.Portal.Entities.Components.Chart})~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<IEnumerable<ComparisonResult>> InternalDynamicListServiceProvider.CompareDynamicLists(IEnumerable<DynamicList> dynamicLists)', validate parameter 'dynamicLists' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Providers.Components.InternalDynamicListServiceProvider.CompareDynamicLists(System.Collections.Generic.IEnumerable{LetPortal.Portal.Entities.SectionParts.DynamicList})~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LetPortal.Core.Persistences.ComparisonResult}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task InternalDynamicListServiceProvider.ForceUpdateDynamicLists(IEnumerable<DynamicList> dynamicLists)', validate parameter 'dynamicLists' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Providers.Components.InternalDynamicListServiceProvider.ForceUpdateDynamicLists(System.Collections.Generic.IEnumerable{LetPortal.Portal.Entities.SectionParts.DynamicList})~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<IEnumerable<ComparisonResult>> InternalStandardServiceProvider.CompareStandardComponent(IEnumerable<StandardComponent> standardComponents)', validate parameter 'standardComponents' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Providers.Components.InternalStandardServiceProvider.CompareStandardComponent(System.Collections.Generic.IEnumerable{LetPortal.Portal.Entities.SectionParts.StandardComponent})~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LetPortal.Core.Persistences.ComparisonResult}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task InternalStandardServiceProvider.ForceUpdateStandards(IEnumerable<StandardComponent> standards)', validate parameter 'standards' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Providers.Components.InternalStandardServiceProvider.ForceUpdateStandards(System.Collections.Generic.IEnumerable{LetPortal.Portal.Entities.SectionParts.StandardComponent})~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<IEnumerable<ComparisonResult>> InternalDatabaseServiceProvider.CompareDatabases(IEnumerable<DatabaseConnection> databaseConnections)', validate parameter 'databaseConnections' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Providers.Databases.InternalDatabaseServiceProvider.CompareDatabases(System.Collections.Generic.IEnumerable{LetPortal.Portal.Entities.Databases.DatabaseConnection})~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LetPortal.Core.Persistences.ComparisonResult}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task InternalDatabaseServiceProvider.ForceUpdateDatabases(IEnumerable<DatabaseConnection> databases)', validate parameter 'databases' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Providers.Databases.InternalDatabaseServiceProvider.ForceUpdateDatabases(System.Collections.Generic.IEnumerable{LetPortal.Portal.Entities.Databases.DatabaseConnection})~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<IEnumerable<ComparisonResult>> InternalPageServiceProvider.ComparePages(IEnumerable<Page> pages)', validate parameter 'pages' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Providers.Pages.InternalPageServiceProvider.ComparePages(System.Collections.Generic.IEnumerable{LetPortal.Portal.Entities.Pages.Page})~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LetPortal.Core.Persistences.ComparisonResult}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task InternalPageServiceProvider.ForceUpdatePages(IEnumerable<Page> pages)', validate parameter 'pages' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Providers.Pages.InternalPageServiceProvider.ForceUpdatePages(System.Collections.Generic.IEnumerable{LetPortal.Portal.Entities.Pages.Page})~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Contains(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Repositories.Apps.AppEFRepository.GetShortApps(string)' with a call to 'string.Contains(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Repositories.Apps.AppEFRepository.GetShortApps(System.String)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Shared.ShortEntityModel}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task AppMongoRepository.UpdateMenuProfileAsync(string appId, MenuProfile menuProfile)', validate parameter 'menuProfile' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Repositories.Apps.AppMongoRepository.UpdateMenuProfileAsync(System.String,LetPortal.Portal.Entities.Apps.MenuProfile)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Contains(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Repositories.Components.ChartEFRepository.GetShortCharts(string)' with a call to 'string.Contains(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Repositories.Components.ChartEFRepository.GetShortCharts(System.String)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Shared.ShortEntityModel}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Contains(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Repositories.Components.DynamicListEFRepository.GetShortDynamicLists(string)' with a call to 'string.Contains(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Repositories.Components.DynamicListEFRepository.GetShortDynamicLists(System.String)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Shared.ShortEntityModel}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Contains(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Repositories.Components.StandardEFRepository.GetShortStandards(string)' with a call to 'string.Contains(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Repositories.Components.StandardEFRepository.GetShortStandards(System.String)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Shared.ShortEntityModel}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Contains(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Repositories.Databases.DatabaseEFRepository.GetShortDatatabases(string)' with a call to 'string.Contains(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Repositories.Databases.DatabaseEFRepository.GetShortDatatabases(System.String)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Shared.ShortEntityModel}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task EntitySchemaEFRepository.UpsertEntitySchemasAsync(IEnumerable<EntitySchema> entitySchemas, bool isKeptSameName = false)', validate parameter 'entitySchemas' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Repositories.EntitySchemas.EntitySchemaEFRepository.UpsertEntitySchemasAsync(System.Collections.Generic.IEnumerable{LetPortal.Portal.Entities.EntitySchemas.EntitySchema},System.Boolean)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task EntitySchemaMongoRepository.UpsertEntitySchemasAsync(IEnumerable<EntitySchema> entitySchemas, bool isKeptSameName = false)', validate parameter 'entitySchemas' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Repositories.EntitySchemas.EntitySchemaMongoRepository.UpsertEntitySchemasAsync(System.Collections.Generic.IEnumerable{LetPortal.Portal.Entities.EntitySchemas.EntitySchema},System.Boolean)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'void LetPortalDbContext.OnModelCreating(ModelBuilder modelBuilder)', validate parameter 'modelBuilder' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Repositories.LetPortalDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.Contains(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Repositories.Pages.PageEFRepository.GetShortPages(string)' with a call to 'string.Contains(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Repositories.Pages.PageEFRepository.GetShortPages(System.String)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Shared.ShortEntityModel}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExecutionChartResponseModel> ChartService.Execute(Chart chart, ExecutionChartRequestModel model)', validate parameter 'chart' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Components.ChartService.Execute(LetPortal.Portal.Entities.Components.Chart,LetPortal.Portal.Models.Charts.ExecutionChartRequestModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExecutionChartResponseModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExtractionChartFilter> ChartService.Extract(ExtractingChartQueryModel model)', validate parameter 'model' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Components.ChartService.Extract(LetPortal.Portal.Models.Charts.ExtractingChartQueryModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.Charts.ExtractionChartFilter}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<PopulateQueryModel> DynamicListService.ExtractingQuery(ExtractingQueryModel extractingQuery)', validate parameter 'extractingQuery' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Components.DynamicListService.ExtractingQuery(LetPortal.Portal.Models.DynamicLists.ExtractingQueryModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.DynamicLists.PopulateQueryModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<DynamicListResponseDataModel> DynamicListService.FetchData(DynamicList dynamicList, DynamicListFetchDataModel fetchDataModel)', validate parameter 'dynamicList' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Components.DynamicListService.FetchData(LetPortal.Portal.Entities.SectionParts.DynamicList,LetPortal.Portal.Models.DynamicLists.DynamicListFetchDataModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.DynamicLists.DynamicListResponseDataModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExecuteDynamicResultModel> DatabaseService.ExecuteDynamic(DatabaseConnection databaseConnection, string formattedString, IEnumerable<ExecuteParamModel> parameters)', validate parameter 'databaseConnection' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Databases.DatabaseService.ExecuteDynamic(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.ExecuteDynamicResultModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExtractingSchemaQueryModel> DatabaseService.ExtractColumnSchema(DatabaseConnection databaseConnection, string formattedString, IEnumerable<ExecuteParamModel> parameters)', validate parameter 'databaseConnection' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Databases.DatabaseService.ExtractColumnSchema(LetPortal.Portal.Entities.Databases.DatabaseConnection,System.String,System.Collections.Generic.IEnumerable{LetPortal.Portal.Models.Databases.ExecuteParamModel})~System.Threading.Tasks.Task{LetPortal.Portal.Models.Databases.ExtractingSchemaQueryModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ExecutedDataSourceModel> DatasourceService.GetDatasourceService(Datasource datasource)', validate parameter 'datasource' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Datasources.DatasourceService.GetDatasourceService(LetPortal.Portal.Entities.Datasources.Datasource)~System.Threading.Tasks.Task{LetPortal.Portal.Models.ExecutedDataSourceModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<byte[]> DiskFileConnectorExecution.GetFileAsync(StoredFile storedFile)', validate parameter 'storedFile' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Files.DiskFileConnectorExecution.GetFileAsync(LetPortal.Core.Files.StoredFile)~System.Threading.Tasks.Task{System.Byte[]}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<StoredFile> DiskFileConnectorExecution.StoreFileAsync(IFormFile file, string tempFilePath)', validate parameter 'file' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Files.DiskFileConnectorExecution.StoreFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)~System.Threading.Tasks.Task{LetPortal.Core.Files.StoredFile}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Services.Files.DiskFileConnectorExecution.StoreFileDisk(string, string)' with a call to 'string.StartsWith(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Files.DiskFileConnectorExecution.StoreFileDisk(System.String,System.String)~LetPortal.Core.Files.StoredFile")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings. Replace this call in 'DiskFileConnectorExecution.StoreFileDisk(string, string)' with a call to 'DateTime.ToString(string, IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Files.DiskFileConnectorExecution.StoreFileDisk(System.String,System.String)~LetPortal.Core.Files.StoredFile")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1816:FileService.DownloadFileAsync(string, bool) calls GC.SuppressFinalize(object), a method that is typically only called within an implementation of 'IDisposable.Dispose'. Refer to the IDisposable pattern for more information.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Files.FileService.DownloadFileAsync(System.String,System.Boolean)~System.Threading.Tasks.Task{LetPortal.Portal.Models.Files.ResponseDownloadFile}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<ResponseUploadFile> FileService.UploadFileAsync(IFormFile file, string uploader, bool allowCompress)', validate parameter 'file' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Files.FileService.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String,System.Boolean)~System.Threading.Tasks.Task{LetPortal.Portal.Models.Files.ResponseUploadFile}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1031:Modify 'ValidateFile' to catch a more specific allowed exception type, or rethrow the exception.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Files.FileService.ValidateFile(Microsoft.AspNetCore.Http.IFormFile)~System.Threading.Tasks.Task{System.Boolean}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<bool> FileService.ValidateFile(IFormFile file)', validate parameter 'file' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Files.FileService.ValidateFile(Microsoft.AspNetCore.Http.IFormFile)~System.Threading.Tasks.Task{System.Boolean}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1031:Modify 'ValidateFile' to catch a more specific allowed exception type, or rethrow the exception.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Files.FileService.ValidateFile(System.String)~System.Threading.Tasks.Task{System.Boolean}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1304:The behavior of 'string.ToLower()' could vary based on the current user's locale settings. Replace this call in 'CheckAllowedExtensionFileRule.CheckAllowedFileExtensions(string)' with a call to 'string.ToLower(CultureInfo)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Files.Validators.CheckAllowedExtensionFileRule.CheckAllowedFileExtensions(System.String)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task CheckAllowedExtensionFileRule.Validate(IFormFile file, string tempFilePath)', validate parameter 'file' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Files.Validators.CheckAllowedExtensionFileRule.Validate(Microsoft.AspNetCore.Http.IFormFile,System.String)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1304:The behavior of 'string.ToLower()' could vary based on the current user's locale settings. Replace this call in 'CheckFileExtensionRule.CheckFileExt(string, string)' with a call to 'string.ToLower(CultureInfo)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Files.Validators.CheckFileExtensionRule.CheckFileExt(System.String,System.String)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1307:The behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings. Replace this call in 'LetPortal.Portal.Services.Files.Validators.CheckFileExtensionRule.CheckFileExt(string, string)' with a call to 'string.IndexOf(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Files.Validators.CheckFileExtensionRule.CheckFileExt(System.String,System.String)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task CheckFileExtensionRule.Validate(IFormFile file, string tempFilePath)', validate parameter 'file' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Files.Validators.CheckFileExtensionRule.Validate(Microsoft.AspNetCore.Http.IFormFile,System.String)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task CheckFileSizeRule.Validate(IFormFile file, string tempFilePath)', validate parameter 'file' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Files.Validators.CheckFileSizeRule.Validate(Microsoft.AspNetCore.Http.IFormFile,System.String)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA2234:Modify 'HttpService.ExecuteHttp(HttpServiceOptions)' to call 'HttpClient.PutAsync(Uri, HttpContent)' instead of 'HttpClient.PutAsync(string, HttpContent)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Http.HttpService.ExecuteHttp(LetPortal.Portal.Entities.Shared.HttpServiceOptions)~System.Threading.Tasks.Task{LetPortal.Portal.Models.Https.HttpResultModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'int.Parse(string)' could vary based on the current user's locale settings. Replace this call in 'HttpService.ExecuteHttp(HttpServiceOptions)' with a call to 'int.Parse(string, IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Http.HttpService.ExecuteHttp(LetPortal.Portal.Entities.Shared.HttpServiceOptions)~System.Threading.Tasks.Task{LetPortal.Portal.Models.Https.HttpResultModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<HttpResultModel> HttpService.ExecuteHttp(HttpServiceOptions httpServiceOptions)', validate parameter 'httpServiceOptions' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Http.HttpService.ExecuteHttp(LetPortal.Portal.Entities.Shared.HttpServiceOptions)~System.Threading.Tasks.Task{LetPortal.Portal.Models.Https.HttpResultModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1305:The behavior of 'long.ToString()' could vary based on the current user's locale settings. Replace this call in 'BackupService.CreateBackupFile(BackupRequestModel)' with a call to 'long.ToString(IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Recoveries.BackupService.CreateBackupFile(LetPortal.Portal.Models.Recoveries.BackupRequestModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.Recoveries.BackupResponseModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<BackupResponseModel> BackupService.CreateBackupFile(BackupRequestModel model)', validate parameter 'model' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Recoveries.BackupService.CreateBackupFile(LetPortal.Portal.Models.Recoveries.BackupRequestModel)~System.Threading.Tasks.Task{LetPortal.Portal.Models.Recoveries.BackupResponseModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1062:In externally visible method 'Task<UploadBackupResponseModel> BackupService.UploadBackupFile(IFormFile uploadFile, string uploader)', validate parameter 'uploadFile' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:LetPortal.Portal.Services.Recoveries.BackupService.UploadBackupFile(Microsoft.AspNetCore.Http.IFormFile,System.String)~System.Threading.Tasks.Task{LetPortal.Portal.Exceptions.Recoveries.UploadBackupResponseModel}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1716:Rename namespace LetPortal.Portal.Entities.Shared so that it no longer conflicts with the reserved language keyword 'Shared'. Using a reserved keyword as the name of a namespace makes it harder for consumers in other languages to use the namespace.", Justification = "<Pending>", Scope = "namespace", Target = "~N:LetPortal.Portal.Entities.Shared")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1716:Rename namespace LetPortal.Portal.Models.Shared so that it no longer conflicts with the reserved language keyword 'Shared'. Using a reserved keyword as the name of a namespace makes it harder for consumers in other languages to use the namespace.", Justification = "<Pending>", Scope = "namespace", Target = "~N:LetPortal.Portal.Models.Shared")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:LetPortal.Portal.Entities.Components.Controls.EventHttpServiceOptions.BoundData")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:LetPortal.Portal.Entities.Components.Controls.TriggerEventOptions.EventsList")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:LetPortal.Portal.Models.Files.ResponseDownloadFile.FileBytes")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'AppConstants' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Portal.Constants.AppConstants")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'DatasourceConstants' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Portal.Constants.DatasourceConstants")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'DynamicListConstants' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Portal.Constants.DynamicListConstants")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'EntitySchemaConstants' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Portal.Constants.EntitySchemaConstants")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'FileConstants' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Portal.Constants.FileConstants")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'MapperConstants' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Portal.Constants.MapperConstants")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'ModuleConstants' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Portal.Constants.ModuleConstants")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1724:The type name File conflicts in whole or in part with the namespace name 'Serilog.Sinks.File'. Change either name to eliminate the conflict.", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Portal.Entities.Files.File")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'DatabaseErrorCodes' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Portal.Exceptions.Databases.DatabaseErrorCodes")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'FileErrorCodes' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Portal.Exceptions.Files.FileErrorCodes")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1052:Type 'BackupErrorCodes' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Portal.Exceptions.Recoveries.BackupErrorCodes")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Build", "CA1063:Remove IDisposable from the list of interfaces implemented by 'LetPortalDbContext' as it is already implemented by base type 'DbContext'.", Justification = "<Pending>", Scope = "type", Target = "~T:LetPortal.Portal.Repositories.LetPortalDbContext")]